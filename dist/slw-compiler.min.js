var A=Object.create;var b=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var Q=l=>b(l,"__esModule",{value:!0});var M=(l,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of $(e))!L.call(l,a)&&(r||a!=="default")&&b(l,a,{get:()=>e[a],enumerable:!(o=W(e,a))||o.enumerable});return l},m=(l,e)=>M(Q(b(l!=null?A(E(l)):{},"default",!e&&l&&l.__esModule?{get:()=>l.default,enumerable:!0}:{value:l,enumerable:!0})),l);var x=m(require("fs")),d=m(require("process"));var u=(h=>(h.unknown="unknown",h.error="error",h.uncompiledBlock="uncompiled-block",h.headline1="headline-1",h.headline2="headline-2",h.headline3="headline-3",h.paragraph="paragraph",h.definition="definition",h.example="example",h.question="question",h.newPage="new-page",h))(u||{}),f=class{constructor(e){this.id="";this.type="unknown";this.text="";this.error=!1;this.labeledText={};this.inputLineNo=0;this.question=null;this.inputLineNo=e}toJson(){let e={};return e.type=this.type,e.inputLineNo=this.inputLineNo,e.text=this.text,e.error=this.error,this.question!=null&&this.question.toJson(e),e}};var J=m(require("fs")),k=m(require("child_process"));var N=m(require("os")),v=m(require("path")),_=m(require("fs"));function S(){let l=N.default.tmpdir()+v.default.sep+"sellquiz-language-workbench"+v.default.sep+Math.floor(Math.random()*1e15).toString()+v.default.sep;return _.default.mkdirSync(l,{recursive:!0}),l}function O(l){_.default.rmSync(l,{recursive:!0,force:!0})}var P=`
import math
import numpy
import random
_import_names = ['math', 'numpy', 'random']

__s = ''
_vars = [];
for __i in range(0, $INSTANCES$):

$CODE$

    if __i == 0:
        _vars=dir()
    _ids=[]
    _types=[]
    _values=[]
    for v in _vars:
        if v.startswith('_') or v.startswith('__'):
            continue
        if v in _import_names:
            continue
        value = eval(v)
        if isinstance(value, numpy.matrix):
            value = numpy.array2string(A, separator=',').replace('\\n','')
            _ids.append(v)
            _types.append('matrix')
            _values.append(value)
        elif isinstance(value, int):
            _ids.append(v)
            _types.append('int')
            _values.append(value)
        elif isinstance(value, float):
            _ids.append(v)
            _types.append('float')
            _values.append(value)
        elif isinstance(value, complex):
            _ids.append(v)
            _types.append('complex')
            c = str(value)
            c.replace('j', 'i')
            if c.startswith('('):
                c = c[1:-1]
            _values.append(c)
        else:
            _ids.append(v)
            _types.append('unknown')
            _values.append(value)

    if __i == 0:
        for id in _ids:
            __s += id + '#'
        __s += '\\n'
        for type in _types:
            __s += type + '#'
        __s += '\\n'

    for value in _values:
        __s += str(value) + '#'
    __s += '\\n'

print(__s)
`;var T=class{constructor(){this.variableIDs=[];this.variableTypes=[];this.variableValues=[];this.inputFieldTypes=[];this.inputFieldAnswers=[];this.text="";this.solutionText=""}compileQuestion(e){if(e.type=u.question,"text"in e.labeledText&&(this.text=e.labeledText.text),"solution"in e.labeledText&&(this.solutionText=e.labeledText.solution),"python"in e.labeledText){let r=S(),o="",a="    "+e.labeledText.python.replace(/\n/g,`
    `),t=P.replace("$CODE$",a).replace("$INSTANCES$","5");J.default.writeFileSync(r+"sell.py",t);try{o=(0,k.execSync)("python3 "+r+"sell.py",{encoding:"utf-8",timeout:1e4,stdio:"pipe"})}catch(i){e.error=!0,e.text=i.stderr,console.log(e.text)}if(O(r),e.error==!1){let i=o.split(`
`);this.variableIDs=i[0].split("#"),this.variableIDs.pop(),this.variableTypes=i[1].split("#"),this.variableTypes.pop();for(let s=2;s<i.length;s++){if(i[s].trim().length==0)continue;let p=i[s].split("#");p.pop(),this.variableValues.push(p)}}}this.text=this.compileText(this.text,!0),this.solutionText=this.compileText(this.solutionText)}compileText(e,r=!1){let o="",a=e.length,t="",i=!1,s=!1;e=e+" ";for(let p=0;p<a;p++){let n=e[p];if(t.length==0&&(n>="a"&&n<="z"||n>="A"&&n<="Z"))t+=n;else if(t.length>0&&(n>="a"&&n<="z"||n>="A"&&n<="Z"||n>="0"&&n<="9"))t+=n;else{if(r&&!i&&s&&t.length>0&&this.variableIDs.includes(t)){o+="?"+this.inputFieldAnswers.length+"?",this.inputFieldAnswers.push(t);let c=this.variableTypes[this.variableIDs.indexOf(t)];c==="complex"&&(c="complex-normalform"),this.inputFieldTypes.push(c)}else i&&t.length>0&&this.variableIDs.includes(t)?o+="@"+t+"@":t.length>0&&(o+=t);n==="$"&&(i=!i),s=i==!1&&n==="#",t="",s||(o+=n)}}return o}toJson(e){e.text=this.text,e.solution=this.solutionText,e["variable-ids"]=this.variableIDs,e["variable-types"]=this.variableTypes,e["input-field-types"]=this.inputFieldTypes,e["input-field-answers"]=this.inputFieldAnswers}};d.default.argv.length!=4&&(console.error("Error: usage: node compiler.ts INPUT_FILE_PATH OUTPUT_FILE_PATH"),d.default.exit(-1));var y=d.default.argv[2],D=d.default.argv[3];x.default.existsSync(y)==!1&&(console.error("error: input file "+y+" does not exist"),d.default.exit(-1));console.log("converting "+y+" to "+D);var I=class{constructor(){this.type="course-page";this.isAsciiMath=!0;this.title="";this.tags=[];this.parts=[];this.section=1;this.subsection=2;this.susubsection=3;this.forceNewParagraph=!1}compile(e){let o=x.default.readFileSync(e,"utf-8").split(`
`),a=o.length;for(let t=0;t<a;t++){let i=o[t];if(!i.trim().startsWith("%"))if(i.trim().length==0)this.forceNewParagraph=!0;else if(i.startsWith("##### "))this.title=i.substring(6).trim();else if(i.startsWith("=====")){let s=new f(t+1);this.parts.push(s),s.type=u.newPage}else if(i.startsWith("!"))i.startsWith("!tex")&&(this.isAsciiMath=!1);else if(i.startsWith("# ")){let s=new f(t+1);this.parts.push(s),s.type=u.headline1,s.text=this.section+". "+i.substring(2).trim(),this.section++,this.subsection=1,this.susubsection=1}else if(i.startsWith("## ")){let s=new f(t+1);this.parts.push(s),s.type=u.headline1,s.text=this.section+"."+this.subsection+" "+i.substring(2).trim(),this.subsection++,this.susubsection=1}else if(i.startsWith("### ")){let s=new f(t+1);this.parts.push(s),s.type=u.headline1,s.text=this.section+"."+this.subsection+"."+this.susubsection+" "+i.substring(2).trim(),this.susubsection++}else if(i.startsWith("---")){let s=new f(t+1);this.parts.push(s),s.type=u.uncompiledBlock;let p="";t++;let n=!0;for(;t<a&&(i=o[t],n&&(s.id=i.trim()),!i.startsWith("---"));)i.startsWith("@")?p=i.substring(1).trim():n||(p in s.labeledText?s.labeledText[p]+=i+`
`:s.labeledText[p]=i+`
`),n&&(n=!1),t++}else{let s=null;!this.forceNewParagraph&&this.parts.length>0&&this.parts.slice(-1)[0].type==u.paragraph?s=this.parts.slice(-1)[0]:(s=new f(t+1),s.type=u.paragraph,this.parts.push(s)),s.text+=i+`
`,this.forceNewParagraph=!1}}for(let t of this.parts)switch(t.type){case u.paragraph:t.text=this.compileParagraph(t.text);break;case u.uncompiledBlock:t.id==="Definition"?this.compileDefinition(t):t.id==="Example"?this.compileExample(t):t.id==="Question"?(t.question=new T,t.question.compileQuestion(t),t.question.text=this.compileParagraph(t.question.text),t.question.solutionText=this.compileParagraph(t.question.solutionText)):(t.type=u.error,t.text="error: unknown part type '"+t.id+"'");break}}compileDefinition(e){e.type=u.definition,e.text=this.compileParagraph(e.labeledText[""])}compileExample(e){e.type=u.example,e.text=this.compileParagraph(e.labeledText[""])}compileParagraph(e){let r="",o=e.length,a=!1,t=!1,i=!1,s=!1,p=0;for(let n=0;n<o;n++){let c=e[n];if(p==0&&c==="-"){s&&(r+="</li>"),i||(r+="<ul>"),i=!0,s=!0,r+="<li>",p++;continue}else p==0&&i&&(c===" "||c==="	"?r+="<br/>":(s=!1,i=!1,r+="</li></ul>"));if(c==="$"){let h="";for(let g=n+1;g<o;g++){let w=e[g];if(w=="$"){n=g;break}h+=w}r+="\\("+h+"\\)"}else c==="*"?e.substring(n).startsWith("**")?(n++,a=!a,r+=a?"<b>":"</b>"):(t=!t,r+=t?"<i>":"</i>"):c===`
`?p=-1:r+=c;p++}return a&&(r+="</b>"),t&&(r+="</i>"),i&&(r+="</li></ul>"),r}toJson(){let e={};e.type=this.type,e.title=this.title,e.tags=this.tags,e.parts=[];for(let r of this.parts)e.parts.push(r.toJson());return e}},q=new I;q.compile(y);var F=JSON.stringify(q.toJson(),null,4);console.log("----- output -----");console.log(F);x.default.writeFileSync(D,F);
