var L=Object.create;var b=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,Q=Object.prototype.hasOwnProperty;var M=o=>b(o,"__esModule",{value:!0});var G=(o,e,r,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let l of B(e))!Q.call(o,l)&&(r||l!=="default")&&b(o,l,{get:()=>e[l],enumerable:!(a=z(e,l))||a.enumerable});return o},h=(o,e)=>G(M(b(o!=null?L(C(o)):{},"default",!e&&o&&o.__esModule?{get:()=>o.default,enumerable:!0}:{value:o,enumerable:!0})),o);var x=h(require("fs")),m=h(require("process"));var T=h(require("fs")),w=require("child_process");var k=h(require("os")),d=h(require("path")),_=h(require("fs"));function g(){let o=k.default.tmpdir()+d.default.sep+"sellquiz-language-workbench"+d.default.sep+Math.floor(Math.random()*1e15).toString()+d.default.sep;return _.default.mkdirSync(o,{recursive:!0}),o}function v(o){_.default.rmSync(o,{recursive:!0,force:!0})}var u=class{constructor(e){this.id="";this.src="";this.type="unknown";this.text="";this.error=!1;this.labeledText={};this.inputLineNo=0;this.question=null;this.image=null;this.inputLineNo=e}toJson(){let e={};return e.type=this.type,e.inputLineNo=this.inputLineNo,e.text=this.text,e.error=this.error,e.src=this.src,this.question!=null&&this.question.toJson(e),this.image!=null&&this.image.toJson(e),e}};var I=`
\\documentclass[class=minimal,border=0pt]{standalone}
\\usepackage[latin1]{inputenc}
\\usepackage{tikz}
\\begin{document}
\\pagestyle{empty}
\\begin{tikzpicture}
$CODE$
\\end{tikzpicture}
\\end{document}
`,J=`
import math
import numpy
import random
_import_names = ['math', 'numpy', 'random']

__s = ''
_vars = [];
for __i in range(0, $INSTANCES$):

$CODE$

    if __i == 0:
        _vars=dir()
    _ids=[]
    _types=[]
    _values=[]
    for v in _vars:
        if v.startswith('_') or v.startswith('__'):
            continue
        if v in _import_names:
            continue
        value = eval(v)
        if isinstance(value, numpy.matrix):
            value = numpy.array2string(A, separator=',').replace('\\n','')
            _ids.append(v)
            _types.append('matrix')
            _values.append(value)
        elif isinstance(value, int):
            _ids.append(v)
            _types.append('int')
            _values.append(value)
        elif isinstance(value, float):
            _ids.append(v)
            _types.append('float')
            _values.append(value)
        elif isinstance(value, complex):
            _ids.append(v)
            _types.append('complex')
            c = str(value)
            c.replace('j', 'i')
            if c.startswith('('):
                c = c[1:-1]
            _values.append(c)
        else:
            _ids.append(v)
            _types.append('unknown')
            _values.append(value)

    if __i == 0:
        for id in _ids:
            __s += id + '#'
        __s += '\\n'
        for type in _types:
            __s += type + '#'
        __s += '\\n'

    for value in _values:
        __s += str(value) + '#'
    __s += '\\n'

print(__s)
`;var N=class{constructor(){this.dataBase64=""}compileImage(e){e.type="image";let r=g(),a="",l=e.labeledText[""],t=I.replace("$CODE$",l);T.default.writeFileSync(r+"image.tex",t);try{a=(0,w.execSync)("cd "+r+" && pdflatex -halt-on-error --enable-pipes --shell-escape "+r+"image.tex",{encoding:"utf-8",timeout:1e4,stdio:"pipe"})}catch(i){e.error=!0,e.text=i.stderr,console.log(e.text)}if(e.error==!1)try{a=(0,w.execSync)("pdf2svg "+r+"image.pdf "+r+"image.svg",{encoding:"utf-8",timeout:1e4,stdio:"pipe"})}catch(i){e.error=!0,e.text=i.stderr,console.log(e.text)}e.error==!1&&(this.dataBase64="data:image/svg+xml;base64,"+T.default.readFileSync(r+"image.svg","base64")),v(r)}toJson(e){e.data=this.dataBase64}};var F=h(require("fs")),$=require("child_process");var S=class{constructor(){this.variableIDs=[];this.variableTypes=[];this.variableValues=[];this.inputFieldTypes=[];this.inputFieldAnswers=[];this.text="";this.solutionText=""}compileQuestion(e){if(e.type="question","text"in e.labeledText&&(this.text=e.labeledText.text),"solution"in e.labeledText&&(this.solutionText=e.labeledText.solution),"python"in e.labeledText){let r=g(),a="",l="    "+e.labeledText.python.replace(/\n/g,`
    `),t=J.replace("$CODE$",l).replace("$INSTANCES$","5");F.default.writeFileSync(r+"sell.py",t);try{a=(0,$.execSync)("python3 "+r+"sell.py",{encoding:"utf-8",timeout:1e4,stdio:"pipe"})}catch(i){e.error=!0,e.text=i.stderr,console.log(e.text)}if(v(r),e.error==!1){let i=a.split(`
`);this.variableIDs=i[0].split("#"),this.variableIDs.pop(),this.variableTypes=i[1].split("#"),this.variableTypes.pop();for(let s=2;s<i.length;s++){if(i[s].trim().length==0)continue;let p=i[s].split("#");p.pop(),this.variableValues.push(p)}}}this.text=this.compileText(this.text,!0),this.solutionText=this.compileText(this.solutionText)}compileText(e,r=!1){let a="",l=e.length,t="",i=!1,s=!1;e=e+" ";for(let p=0;p<l;p++){let n=e[p];if(t.length==0&&(n>="a"&&n<="z"||n>="A"&&n<="Z"))t+=n;else if(t.length>0&&(n>="a"&&n<="z"||n>="A"&&n<="Z"||n>="0"&&n<="9"))t+=n;else{if(r&&!i&&s&&t.length>0&&this.variableIDs.includes(t)){a+="?"+this.inputFieldAnswers.length+"?",this.inputFieldAnswers.push(t);let c=this.variableTypes[this.variableIDs.indexOf(t)];c==="complex"&&(c="complex-normalform"),this.inputFieldTypes.push(c)}else i&&t.length>0&&this.variableIDs.includes(t)?a+="@"+t+"@":t.length>0&&(a+=t);n==="$"&&(i=!i),s=i==!1&&n==="#",t="",s||(a+=n)}}return a}toJson(e){e.text=this.text,e.solution=this.solutionText,e["variable-ids"]=this.variableIDs,e["variable-types"]=this.variableTypes,e["input-field-types"]=this.inputFieldTypes,e["input-field-answers"]=this.inputFieldAnswers}};m.default.argv.length!=4&&(console.error("Error: usage: node compiler.ts INPUT_FILE_PATH OUTPUT_FILE_PATH"),m.default.exit(-1));var y=m.default.argv[2],q=m.default.argv[3];x.default.existsSync(y)==!1&&(console.error("error: input file "+y+" does not exist"),m.default.exit(-1));console.log("converting "+y+" to "+q);var A=class{constructor(){this.type="course-page";this.isAsciiMath=!0;this.title="";this.tags=[];this.parts=[];this.section=1;this.subsection=2;this.susubsection=3;this.forceNewParagraph=!1}compile(e){let a=x.default.readFileSync(e,"utf-8").split(`
`),l=a.length;for(let t=0;t<l;t++){let i=a[t];if(!i.trim().startsWith("%"))if(i.trim().length==0)this.forceNewParagraph=!0;else if(i.startsWith("##### "))this.title=i.substring(6).trim();else if(i.startsWith("=====")){let s=new u(t+1);this.parts.push(s),s.type="new-page"}else if(i.startsWith("!"))i.startsWith("!tex")&&(this.isAsciiMath=!1);else if(i.startsWith("# ")){let s=new u(t+1);this.parts.push(s),s.type="headline-1",s.text=this.section+". "+i.substring(2).trim(),this.section++,this.subsection=1,this.susubsection=1}else if(i.startsWith("## ")){let s=new u(t+1);this.parts.push(s),s.type="headline-1",s.text=this.section+"."+this.subsection+" "+i.substring(2).trim(),this.subsection++,this.susubsection=1}else if(i.startsWith("### ")){let s=new u(t+1);this.parts.push(s),s.type="headline-1",s.text=this.section+"."+this.subsection+"."+this.susubsection+" "+i.substring(2).trim(),this.susubsection++}else if(i.startsWith("---")){let s=new u(t+1);this.parts.push(s),s.type="uncompiled-block";let p="";t++;let n=!0;for(;t<l&&(i=a[t],s.src+=i+`
`,n&&(s.id=i.trim()),!i.startsWith("---"));)i.startsWith("@")?p=i.substring(1).trim():n||(p in s.labeledText?s.labeledText[p]+=i+`
`:s.labeledText[p]=i+`
`),n&&(n=!1),t++}else{let s=null;!this.forceNewParagraph&&this.parts.length>0&&this.parts.slice(-1)[0].type=="paragraph"?s=this.parts.slice(-1)[0]:(s=new u(t+1),s.type="paragraph",this.parts.push(s)),s.text+=i+`
`,this.forceNewParagraph=!1}}for(let t of this.parts)switch(t.type){case"paragraph":t.text=this.compileParagraph(t.text);break;case"uncompiled-block":t.id==="Definition."?this.compileDefinition(t):t.id==="Example."?this.compileExample(t):t.id==="Question."?(t.question=new S,t.question.compileQuestion(t),t.question.text=this.compileParagraph(t.question.text),t.question.solutionText=this.compileParagraph(t.question.solutionText)):t.id==="Tikz."?(t.image=new N,t.image.compileImage(t)):(t.type="error",t.text="error: unknown part type '"+t.id+"'");break}}compileDefinition(e){e.type="definition",e.text=this.compileParagraph(e.labeledText[""])}compileExample(e){e.type="example",e.text=this.compileParagraph(e.labeledText[""])}compileParagraph(e){let r="",a=e.length,l=!1,t=!1,i=!1,s=!1,p=0;for(let n=0;n<a;n++){let c=e[n];if(p==0&&c==="-"){s&&(r+="</li>"),i||(r+="<ul>"),i=!0,s=!0,r+="<li>",p++;continue}else p==0&&i&&(c===" "||c==="	"?r+="<br/>":(s=!1,i=!1,r+="</li></ul>"));if(c==="$"){let O="";for(let f=n+1;f<a;f++){let P=e[f];if(P=="$"){n=f;break}O+=P}r+="\\("+O+"\\)"}else c==="*"?e.substring(n).startsWith("**")?(n++,l=!l,r+=l?"<b>":"</b>"):(t=!t,r+=t?"<i>":"</i>"):c===`
`?p=-1:r+=c;p++}return l&&(r+="</b>"),t&&(r+="</i>"),i&&(r+="</li></ul>"),r}toJson(){let e={};e.type=this.type,e.title=this.title,e.tags=this.tags,e.parts=[];for(let r of this.parts)e.parts.push(r.toJson());return e}},E=new A;E.compile(y);var W=JSON.stringify(E.toJson(),null,4);console.log("----- output -----");console.log(W);x.default.writeFileSync(q,W);
